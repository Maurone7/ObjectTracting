import numpy as np
import os
import cv2
import glob
from skimage import data
from skimage import filters
from skimage.color import rgb2gray
import matplotlib.pyplot as plt

choose = str(input("What xy and what channel?"
                  "\n> "))

# Substitute ####### wiht the path name
folder = str(glob.glob(r'#######'))

# doler_correct is use to avoid some notations inside python that can create problems with the exact file path in the future, substitute x and y with which what letter index to start and end
folder_correct = folder[x:y]
file_name = os.listdir(r'#######')
file_list = []

for file_names in file_name:
   length_file_name = len(file_names)
   for starting_point in range(len(file_names)):
       if choose == file_names[starting_point:(starting_point+len(choose))]:
           file_list.append(str(folder_correct) + '/' + str(file_names))


picture_choice = int(input('What image do you want? '))

# Sample Image of scikit-image package
img = cv2.imread(file_list[picture_choice])
gray_img = rgb2gray(img)

# Setting the plot size to 15,15
plt.figure(figsize=(15, 15))

for i in range(10):

   # Iterating different thresholds
   binarized_gray = (gray_img > i*0.1)*1
   plt.subplot(5, 2, i+1)

   # Rounding of the threshold
   # value to 1 decimal point (last value in the parenthesis)
   plt.title("Threshold: >"+str(round(i*0.1, 1)))

   # Displaying the binarized image
   # of various thresholds
   plt.imshow(binarized_gray, cmap = 'gray')

plt.tight_layout()
plt.show()


# END OF THE SCRIPT
